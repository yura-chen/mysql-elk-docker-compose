input {
  jdbc {
    jdbc_driver_library => "/opt/mysql-connector-java-8.0.15.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://192.168.10.11:3306/piwik_uat?allowPublicKeyRetrieval=true&useSSL=false&"
    jdbc_user => "homestead"
    jdbc_password => "secret"
    schedule => "* * * * *"
    statement => "select
          idvisitor_readable,
          idvisit,
          url,
          MAX(server_time) as last_open_time_per_visit,
          IF(SUM(custom_var_k1 = 'print'), 1, 0) as printed,
          IF(SUM(custom_var_v1 = 'Facebook'), 1, 0) as shared_to_fb,
          IF(SUM(custom_var_v1 = 'Pinterest'), 1, 0) as shared_to_pinterest,
          IF(SUM(custom_var_v1 = 'Twitter'), 1, 0) as shared_to_twitter,
          IF(SUM(custom_var_v1 = 'Pocket'), 1, 0) as shared_to_pocket,
          COALESCE(raw_url REGEXP 'recommendation_engine=semantic', 0) as recommendend_by_semantic,
          COALESCE(raw_url REGEXP 'recommendation_engine=factor_loads', 0) as recommendend_by_factor_loads,
          COALESCE(SUM(custom_var_v1 REGEXP 'comment'), 0) as commented,
          IF(SUM(custom_var_k1 = 'newsletter'), 1, 0) as subscribed_to_newsletter,
          COALESCE(MAX(custom_var_k1*1) , 0) as scrolled_to_position,
          COALESCE(SUM(IF(`custom_var_k1` in ('25', '50', '75', '100'), custom_var_v1, 0)), 0) as scrolled_time,
          SUM(time_spent_ref_action) as time_tracked_by_matomo,
          GREATEST(SUM(time_spent_ref_action), COALESCE(SUM(IF(`custom_var_k1` in ('25', '50', '75', '100'), custom_var_v1, 0)), 0)) as page_total_time_spent
      from (
          select
              lower(hex(matomo_log_visit.idvisitor)) as idvisitor_readable,
              matomo_log_visit.idvisitor,
              log_action.name as raw_url,
              REPLACE(SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(log_action.name, '?', 1), '&', 1), 'https://', -1), 'http://', -1), 'www.', -1), 'feature-714-api-7ayt4yq-ecdh3k3dkhera.eu-2.platformsh.site', '') as url,
              matomo_log_visit.idvisit,
              matomo_log_link_visit_action.server_time,
              matomo_log_link_visit_action.interaction_position,
              matomo_log_link_visit_action.time_spent_ref_action,
              matomo_log_link_visit_action.custom_var_k1,
              matomo_log_link_visit_action.custom_var_v1
          from `matomo_log_visit`
          left join matomo_log_link_visit_action
              ON (matomo_log_link_visit_action.idvisitor = matomo_log_visit.idvisitor
              and matomo_log_link_visit_action.idvisit = matomo_log_visit.idvisit)
          LEFT JOIN matomo_log_action AS log_action
              ON matomo_log_link_visit_action.idaction_url = log_action.idaction
          where matomo_log_link_visit_action.idvisit > :sql_last_value and matomo_log_link_visit_action.idvisit <= (select max(t.idvisit) from (select distinct idvisit from matomo_log_link_visit_action as mllva where mllva.idvisit > :sql_last_value limit 100000) as t)
          and log_action.name REGEXP('((.*)+(/genuss/)+(.*))|((.*)+(/body-and-soul/)+(.*))|((.*)+(/leben/)+(.*))|((.*)+(/karriere/)+(.*))|((.*)+(/kultur/)+(.*))|((.*)+(/design/)+(.*))|((.*)+(/wohnen/)+(.*))|((.*)+(/liebe/)+(.*))|((.*)+(/kolumne/)+(.*)+(\/)+(.*))')
      ) as u
      group by u.url, u.idvisit order by u.idvisit;"
    use_column_value => true
    tracking_column => "idvisit"
    tracking_column_type => "numeric"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "piwik_visits_aggregated"
    document_id => "%{idvisit}_%{idvisitor_readable}"
    doc_as_upsert => true
    action => 'update'
  }
  stdout {
    codec => rubydebug
  }
}

